Object.defineProperty(exports, '__esModule', { value: true });

const reHtmlEntity = /["&'<>]/;
function escapeHTML(str) {
    const match = reHtmlEntity.exec(str);
    if (match === null) {
        return str;
    }
    let escape = '';
    let html = '';
    let index = match.index;
    let lastIndex = 0;
    const len = str.length;
    // iterate from the first match
    /**
   * Adjust order for commonly seen symbols:
   * Take https://tc39.es/ecma262 as an example,
   *
   * < 369266
   * > 369296, though sometimes it is more common, it alomost always comes after <
   * " 277105, people seems always prefer " over ' in HTML
   * ' 484, less often, but sometimes is used for attribute anyway
   * & 4424
   */ for(; index < len; index++){
        switch(str.charCodeAt(index)){
            case 60:
                escape = '&lt;';
                break;
            case 62:
                escape = '&gt;';
                break;
            case 34:
                escape = '&quot;';
                break;
            case 39:
                escape = '&#39;';
                break;
            case 38:
                escape = '&amp;';
                break;
            default:
                continue;
        }
        if (lastIndex !== index) {
            html += str.slice(lastIndex, index);
        }
        html += escape;
        lastIndex = index + 1;
    }
    if (lastIndex !== index) {
        html += str.slice(lastIndex, index);
    }
    return html;
}

const reHtmlEntityGlobal = /&(?:[gl]t|quot|#39|amp|#6[02]|#34|apos|#38);/g;
const unescapeEntityMap = Object.create(null);
unescapeEntityMap['&lt;'] = '<';
unescapeEntityMap['&gt;'] = '>';
unescapeEntityMap['&quot;'] = '"';
unescapeEntityMap['&#39;'] = '\'';
unescapeEntityMap['&amp;'] = '&';
unescapeEntityMap['&#60;'] = '<';
unescapeEntityMap['&#62;'] = '>';
unescapeEntityMap['&#34;'] = '"';
unescapeEntityMap['&apos;'] = '\'';
unescapeEntityMap['&#38;'] = '&';
const replacer = (match)=>unescapeEntityMap[match];
// eslint-disable-next-line @typescript-eslint/unbound-method -- cache prototype look up
const StringPrototypeReplace = String.prototype.replace;
function unescapeHTML(str) {
    return StringPrototypeReplace.call(str, reHtmlEntityGlobal, replacer);
}

exports.escapeHTML = escapeHTML;
exports.unescapeHTML = unescapeHTML;
